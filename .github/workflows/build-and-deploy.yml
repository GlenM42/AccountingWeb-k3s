name: Build and Deploy
on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
  workflow_dispatch:

jobs:
  prepare:
    name: Create Artifacts
    runs-on: [self-hosted]
    outputs:
      image_tag: ${{ steps.generate.outputs.image_tag }}
    steps:
      - name: Generate date/branch tag
        id: generate
        shell: bash
        run: |
          RAW_BRANCH="${GITHUB_REF##*/}"
          BRANCH=$(echo "$RAW_BRANCH" | tr '[:upper:]' '[:lower:]' \
                   | tr -c 'a-z0-9' '-' | sed 's/--*/-/g;s/^-//;s/-$//')
          DATE=$(date +%F-%H%M)
          TAG="${DATE}--${BRANCH}"

          echo "image_tag=$TAG" >> "$GITHUB_OUTPUT"
          echo "Generated tag: $TAG"

  build:
    name: Build and Push Image
    runs-on: [self-hosted]
    needs: prepare
    steps:
      - uses: actions/checkout@v4

      - id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker

      - uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - uses: docker/build-push-action@v5
        with:
          context: .
          tags: ${{ secrets.REGISTRY_URL }}/accountingweb:${{ needs.prepare.outputs.image_tag }}
          push: true
          builder: ${{ steps.buildx.outputs.name }}

  deploy:
    name: Deploy
    runs-on: [self-hosted]
    needs: [prepare, build]
    if: github.ref == 'refs/heads/main'
    env:
      IMAGE_TAG: ${{ needs.prepare.outputs.image_tag }}
      REGISTRY_URL: ${{ secrets.REGISTRY_URL }}
    steps:
      - name: Log in to Docker registry
        run: echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login "$REGISTRY_URL" -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin
  
      - name: Pull new image
        working-directory: /home/ha/projects/accountingweb
        run: docker pull "$REGISTRY_URL/accountingweb:$IMAGE_TAG"
  
      - name: Update Compose env and restart
        working-directory: /home/ha/projects/accountingweb
        run: |
          echo "IMAGE_TAG=$IMAGE_TAG" > .env
          echo "REGISTRY_URL=$REGISTRY_URL" >> .env
          if command -v docker &>/dev/null && docker compose version &>/dev/null; then
            docker compose down
            docker compose up -d
          else
            docker-compose down
            docker-compose up -d
          fi
  
      - name: Cleanup unused images
        run: docker image prune -f

